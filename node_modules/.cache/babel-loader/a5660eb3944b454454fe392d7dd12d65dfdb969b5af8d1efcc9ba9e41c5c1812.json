{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { projectFirestore, projectAuth } from \"../firebase/config\";\nimport { collection, addDoc, getDocs, query, where, orderBy, Timestamp } from \"firebase/firestore\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nconst useReviews = productNumber => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [reviewText, setReviewText] = useState(\"\");\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const getReviews = await getDocs(query(collection(projectFirestore, \"reviews\"), where(\"product\", \"==\", productNumber), orderBy(\"timestamp\", \"desc\")));\n      const reviewsData = getReviews.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setReviews(reviewsData);\n    };\n    fetchReviews();\n  }, [productNumber]);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(projectAuth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleReviewSubmit = async () => {\n    const newReview = {\n      username: user ? user.email : \"Anonymous\",\n      date: new Date().toLocaleDateString(),\n      text: reviewText,\n      product: productNumber,\n      timestamp: Timestamp.now()\n    };\n    try {\n      const docReference = await addDoc(collection(projectFirestore, \"reviews\"), newReview);\n      setReviews([...reviews, {\n        ...newReview,\n        id: docReference.id\n      }]);\n      setReviewText(\"\");\n    } catch (err) {\n      console.error(\"Error adding a new review: \", err);\n    }\n  };\n  const handleReviewUpdate = async (id, updatedText) => {\n    try {\n      const reviewDoc = doc(projectFirestore, \"reviews\", id);\n      await updateDoc(reviewDoc, {\n        text: updatedText,\n        timestamp: Timestamp.now()\n      });\n      setReviews(reviews.map(review => review.id === id ? {\n        ...review,\n        text: updatedText,\n        timestamp: Timestamp.now()\n      } : review));\n    } catch (err) {\n      console.error(\"Error updating the review: \", err);\n    }\n  };\n  return {\n    reviews,\n    reviewText,\n    setReviewText,\n    handleReviewSubmit,\n    handleReviewUpdate,\n    user,\n    setReviews\n  };\n};\n_s(useReviews, \"nC57n8jTTBYzPQ0buqiQQYcU/RE=\");\nexport default useReviews;","map":{"version":3,"names":["useState","useEffect","projectFirestore","projectAuth","collection","addDoc","getDocs","query","where","orderBy","Timestamp","onAuthStateChanged","useReviews","productNumber","_s","reviews","setReviews","reviewText","setReviewText","user","setUser","fetchReviews","getReviews","reviewsData","docs","map","doc","data","id","unsubscribe","handleReviewSubmit","newReview","username","email","date","Date","toLocaleDateString","text","product","timestamp","now","docReference","err","console","error","handleReviewUpdate","updatedText","reviewDoc","updateDoc","review"],"sources":["/Users/zhaoruzhu/Downloads/StartupSystem/milestone-3-2/modern-shop/src/hooks/useReviews.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { projectFirestore, projectAuth } from \"../firebase/config\";\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  query,\n  where,\n  orderBy,\n  Timestamp,\n} from \"firebase/firestore\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nconst useReviews = (productNumber) => {\n  const [reviews, setReviews] = useState([]);\n  const [reviewText, setReviewText] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const getReviews = await getDocs(\n        query(\n          collection(projectFirestore, \"reviews\"),\n          where(\"product\", \"==\", productNumber),\n          orderBy(\"timestamp\", \"desc\")\n        )\n      );\n      const reviewsData = getReviews.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setReviews(reviewsData);\n    };\n\n    fetchReviews();\n  }, [productNumber]);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(projectAuth, (user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleReviewSubmit = async () => {\n    const newReview = {\n      username: user ? user.email : \"Anonymous\",\n      date: new Date().toLocaleDateString(),\n      text: reviewText,\n      product: productNumber,\n      timestamp: Timestamp.now(),\n    };\n\n    try {\n      const docReference = await addDoc(\n        collection(projectFirestore, \"reviews\"),\n        newReview\n      );\n      setReviews([...reviews, { ...newReview, id: docReference.id }]);\n      setReviewText(\"\");\n    } catch (err) {\n      console.error(\"Error adding a new review: \", err);\n    }\n  };\n\n  const handleReviewUpdate = async (id, updatedText) => {\n    try {\n      const reviewDoc = doc(projectFirestore, \"reviews\", id);\n      await updateDoc(reviewDoc, {\n        text: updatedText,\n        timestamp: Timestamp.now(),\n      });\n      setReviews(\n        reviews.map((review) =>\n          review.id === id\n            ? { ...review, text: updatedText, timestamp: Timestamp.now() }\n            : review\n        )\n      );\n    } catch (err) {\n      console.error(\"Error updating the review: \", err);\n    }\n  };\n\n  return {\n    reviews,\n    reviewText,\n    setReviewText,\n    handleReviewSubmit,\n    handleReviewUpdate,\n    user,\n    setReviews,\n  };\n};\n\nexport default useReviews;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}